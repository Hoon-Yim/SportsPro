// <auto-generated />
using System;
using COMP2139_KRN_GENIUS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMP2139_KRN_GENIUS.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "South Korea"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "North Korea"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "United States"
                        },
                        new
                        {
                            CountryId = 4,
                            Name = "Canada"
                        },
                        new
                        {
                            CountryId = 5,
                            Name = "England"
                        },
                        new
                        {
                            CountryId = 6,
                            Name = "Russia"
                        },
                        new
                        {
                            CountryId = 7,
                            Name = "Japan"
                        },
                        new
                        {
                            CountryId = 8,
                            Name = "France"
                        },
                        new
                        {
                            CountryId = 9,
                            Name = "Italy"
                        },
                        new
                        {
                            CountryId = 10,
                            Name = "China"
                        },
                        new
                        {
                            CountryId = 11,
                            Name = "Ukraine"
                        },
                        new
                        {
                            CountryId = 12,
                            Name = "Australia"
                        },
                        new
                        {
                            CountryId = 13,
                            Name = "Argentina"
                        },
                        new
                        {
                            CountryId = 14,
                            Name = "Vietnam"
                        },
                        new
                        {
                            CountryId = 15,
                            Name = "Thailand"
                        },
                        new
                        {
                            CountryId = 16,
                            Name = "Brazil"
                        },
                        new
                        {
                            CountryId = 17,
                            Name = "Syria"
                        },
                        new
                        {
                            CountryId = 18,
                            Name = "Nepal"
                        },
                        new
                        {
                            CountryId = 19,
                            Name = "Mexico"
                        },
                        new
                        {
                            CountryId = 20,
                            Name = "Malaysia"
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<int?>("CountryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasMaxLength(51)
                        .HasColumnType("nvarchar(51)");

                    b.HasKey("CustomerId");

                    b.HasIndex("CountryId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "13 Asrahi ave",
                            City = "Vaughan",
                            CountryId = 3,
                            Email = "evans34@gmail.com",
                            FirstName = "Steve",
                            LastName = "Rogers",
                            Phone = "(415) 222-9723",
                            PostalCode = "K2E 4B3",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "99 Glass st",
                            City = "Toronto",
                            CountryId = 1,
                            Email = "metalarm@gmail.com",
                            FirstName = "Bucky",
                            LastName = "Barnes",
                            Phone = "(423) 523-1233",
                            PostalCode = "M6M 4B5",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "14 Maximum ct",
                            City = "Richmond",
                            CountryId = 4,
                            Email = "vision34@gmail.com",
                            FirstName = "Wanda",
                            LastName = "Maximoff",
                            Phone = "(953) 992-3111",
                            PostalCode = "M3M 1B1",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 4,
                            Address = "53 Vern st",
                            City = "Toronto",
                            CountryId = 6,
                            Email = "metalarm@gmail.com",
                            FirstName = "Sam",
                            LastName = "Wilson",
                            Phone = "(423) 523-1233",
                            PostalCode = "V34 4K6",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 5,
                            Address = "3 Marvel ct",
                            City = "Toronto",
                            CountryId = 3,
                            Email = "mfather01@gmail.com",
                            FirstName = "Stan",
                            LastName = "Lee",
                            Phone = "(932) 032-9234",
                            PostalCode = "VE3 M5A",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 6,
                            Address = "19 Green ave",
                            City = "Toronto",
                            CountryId = 16,
                            Email = "hulk19000@gmail.com",
                            FirstName = "Bruce",
                            LastName = "Banner",
                            Phone = "(752) 922-1211",
                            PostalCode = "S0M A2S",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 7,
                            Address = "277 Kree dong",
                            City = "Toronto",
                            CountryId = 20,
                            Email = "furylover99@gmail.com",
                            FirstName = "Carol",
                            LastName = "Danvers",
                            Phone = "(989) 231-2133",
                            PostalCode = "K1R FU4",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 8,
                            Address = "6 Web ct",
                            City = "Quenes",
                            CountryId = 9,
                            Email = "spidey@gmail.com",
                            FirstName = "Peter",
                            LastName = "Parker",
                            Phone = "(112) 911-9824",
                            PostalCode = "M62 K43",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 9,
                            Address = "199 Shield ave",
                            City = "Toronto",
                            CountryId = 14,
                            Email = "carollover@gmail.com",
                            FirstName = "Nick",
                            LastName = "Fury",
                            Phone = "(538) 423-8421",
                            PostalCode = "A23 F25",
                            Province = "Ontario"
                        },
                        new
                        {
                            CustomerId = 10,
                            Address = "1012 Celest st",
                            City = "Toronto",
                            CountryId = 15,
                            Email = "starlord23@gmail.com",
                            FirstName = "Peter",
                            LastName = "Quill",
                            Phone = "(932) 244-4423",
                            PostalCode = "A23 F25",
                            Province = "Ontario"
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Incident", b =>
                {
                    b.Property<int>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IncidentId"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpened")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TechnicianId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IncidentId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("Incidents");

                    b.HasData(
                        new
                        {
                            IncidentId = 1,
                            CustomerId = 8,
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3684),
                            Description = "Install fails with error code 410",
                            ProductId = 10,
                            TechnicianId = 3,
                            Title = "Could not install"
                        },
                        new
                        {
                            IncidentId = 2,
                            CustomerId = 2,
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3746),
                            Description = "Program fails with error code 510, unable to open database",
                            ProductId = 3,
                            Title = "Error launching program"
                        },
                        new
                        {
                            IncidentId = 3,
                            CustomerId = 3,
                            DateClosed = new DateTime(2023, 12, 9, 19, 25, 39, 224, DateTimeKind.Local).AddTicks(3751),
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3749),
                            Description = "Install fails with error code 410",
                            ProductId = 4,
                            Title = "Could not install"
                        },
                        new
                        {
                            IncidentId = 4,
                            CustomerId = 1,
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3754),
                            Description = "Reading data from DB fails with error code 120",
                            ProductId = 9,
                            Title = "Could not load data"
                        },
                        new
                        {
                            IncidentId = 5,
                            CustomerId = 5,
                            DateClosed = new DateTime(2023, 5, 9, 11, 36, 39, 224, DateTimeKind.Local).AddTicks(3757),
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3756),
                            Description = "Opening the DB fails with error code 300",
                            ProductId = 5,
                            TechnicianId = 6,
                            Title = "Could not open the DB"
                        },
                        new
                        {
                            IncidentId = 6,
                            CustomerId = 10,
                            DateOpened = new DateTime(2022, 4, 8, 19, 13, 39, 224, DateTimeKind.Local).AddTicks(3760),
                            Description = "Upgrading fails with error code 230",
                            ProductId = 1,
                            TechnicianId = 7,
                            Title = "Fail to upgrade"
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("YearlyPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Code = "TRNY10",
                            Date = new DateTime(2020, 3, 1, 8, 23, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tournament Master 1.0",
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 2,
                            Code = "LEAG10",
                            Date = new DateTime(2020, 7, 26, 15, 28, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler 1.0",
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 3,
                            Code = "LEAGD10",
                            Date = new DateTime(2020, 8, 3, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler Deluxe 1.0",
                            YearlyPrice = 6.9900000000000002
                        },
                        new
                        {
                            ProductId = 4,
                            Code = "DRAFT10",
                            Date = new DateTime(2020, 8, 15, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Manager 1.0",
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 5,
                            Code = "TEAM10",
                            Date = new DateTime(2020, 9, 3, 11, 42, 0, 0, DateTimeKind.Unspecified),
                            Name = "Team Manager 1.0",
                            YearlyPrice = 4.9900000000000002
                        },
                        new
                        {
                            ProductId = 6,
                            Code = "TRNY20",
                            Date = new DateTime(2020, 10, 30, 9, 43, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tournament Manager 2.0",
                            YearlyPrice = 7.9900000000000002
                        },
                        new
                        {
                            ProductId = 7,
                            Code = "DRAFT20",
                            Date = new DateTime(2020, 11, 5, 14, 3, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Manager 2.0",
                            YearlyPrice = 5.9900000000000002
                        },
                        new
                        {
                            ProductId = 8,
                            Code = "LEAGD20",
                            Date = new DateTime(2020, 11, 10, 9, 35, 0, 0, DateTimeKind.Unspecified),
                            Name = "League Scheduler Deluxe 2.0",
                            YearlyPrice = 5.9900000000000002
                        },
                        new
                        {
                            ProductId = 9,
                            Code = "DRAFT30",
                            Date = new DateTime(2020, 11, 20, 16, 49, 0, 0, DateTimeKind.Unspecified),
                            Name = "Draft Manager 3.0",
                            YearlyPrice = 5.9900000000000002
                        },
                        new
                        {
                            ProductId = 10,
                            Code = "TEAM20",
                            Date = new DateTime(2020, 12, 15, 17, 42, 0, 0, DateTimeKind.Unspecified),
                            Name = "Team Manager 2.0",
                            YearlyPrice = 6.9900000000000002
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Registration", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.HasKey("CustomerId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Registrations");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CustomerId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CustomerId = 1,
                            ProductId = 7
                        },
                        new
                        {
                            CustomerId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 2,
                            ProductId = 4
                        },
                        new
                        {
                            CustomerId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            CustomerId = 3,
                            ProductId = 10
                        },
                        new
                        {
                            CustomerId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 3,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 4,
                            ProductId = 4
                        },
                        new
                        {
                            CustomerId = 4,
                            ProductId = 6
                        },
                        new
                        {
                            CustomerId = 4,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 3
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 10
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 5
                        },
                        new
                        {
                            CustomerId = 5,
                            ProductId = 6
                        },
                        new
                        {
                            CustomerId = 6,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 6,
                            ProductId = 5
                        },
                        new
                        {
                            CustomerId = 6,
                            ProductId = 7
                        },
                        new
                        {
                            CustomerId = 7,
                            ProductId = 8
                        },
                        new
                        {
                            CustomerId = 7,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 7,
                            ProductId = 3
                        },
                        new
                        {
                            CustomerId = 8,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 8,
                            ProductId = 3
                        },
                        new
                        {
                            CustomerId = 8,
                            ProductId = 6
                        },
                        new
                        {
                            CustomerId = 9,
                            ProductId = 4
                        },
                        new
                        {
                            CustomerId = 9,
                            ProductId = 7
                        },
                        new
                        {
                            CustomerId = 9,
                            ProductId = 10
                        },
                        new
                        {
                            CustomerId = 10,
                            ProductId = 2
                        },
                        new
                        {
                            CustomerId = 10,
                            ProductId = 1
                        },
                        new
                        {
                            CustomerId = 10,
                            ProductId = 6
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Technician", b =>
                {
                    b.Property<int>("TechnicianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechnicianId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechnicianId");

                    b.ToTable("Technicians");

                    b.HasData(
                        new
                        {
                            TechnicianId = 1,
                            Email = "yimsh4507@gmail.com",
                            Name = "Seunghun Yim",
                            Phone = "(647) 551-3087"
                        },
                        new
                        {
                            TechnicianId = 2,
                            Email = "aayuooh233@gmail.com",
                            Name = "Yoonhee Kim",
                            Phone = "(647) 551-1233"
                        },
                        new
                        {
                            TechnicianId = 3,
                            Email = "jysong304@gmail.com",
                            Name = "JooYoung Song",
                            Phone = "(432) 132-1404"
                        },
                        new
                        {
                            TechnicianId = 4,
                            Email = "tony99@gmail.com",
                            Name = "Anthony Edward Stark",
                            Phone = "(232) 932-3921"
                        },
                        new
                        {
                            TechnicianId = 5,
                            Email = "russia23@gmail.com",
                            Name = "Natasha Romanoff",
                            Phone = "(432) 132-1404"
                        },
                        new
                        {
                            TechnicianId = 6,
                            Email = "hawki99@gmail.com",
                            Name = "Clint Barton",
                            Phone = "(432) 882-0231"
                        },
                        new
                        {
                            TechnicianId = 7,
                            Email = "warmachine34@gmail.com",
                            Name = "James Rhodes",
                            Phone = "(842) 949-0100"
                        });
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Customer", b =>
                {
                    b.HasOne("COMP2139_KRN_GENIUS.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Incident", b =>
                {
                    b.HasOne("COMP2139_KRN_GENIUS.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_KRN_GENIUS.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_KRN_GENIUS.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId");

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Registration", b =>
                {
                    b.HasOne("COMP2139_KRN_GENIUS.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("COMP2139_KRN_GENIUS.Models.Product", "Product")
                        .WithMany("Registrations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("COMP2139_KRN_GENIUS.Models.Product", b =>
                {
                    b.Navigation("Registrations");
                });
#pragma warning restore 612, 618
        }
    }
}
